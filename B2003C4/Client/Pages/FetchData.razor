@page "/fetchdata"

@attribute [Authorize]
@inject IJSRuntime JS
@inject LocalNewsPaperContext LocalNewsPaperContext
@inject NavigationManager Navigation
@inject HttpClient Http


    <body>
        <h1>Weather forecast</h1>

        <p>This component demonstrates fetching data from the server.</p

        <table class="table">
            @if (dokusya != null)
            {
                foreach ( var forecast in dokusya)
                {
                    <tr>
                        <td>@forecast.dokuCode</td>
                    </tr>
                }
            }
        </table>

    </body>

    @*
        @if (forecasts == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Temp. (C)</th>
                        <th>Temp. (F)</th>
                        <th>Summary</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var forecast in Dokusya)
                    {
                        <tr>
                            <td>@forecast.Date.ToShortDateString()</td>
                            <td>@forecast.TemperatureC</td>
                            <td>@forecast.TemperatureF</td>
                            <td>@forecast.Summary</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    *@

    @code {

        private Dokusya[] dokusya;

        protected override async Task OnInitializedAsync()
        {
            //dokusya = await LocalNewsPaperContext.GetAllDokusya();

            await LocalNewsPaperContext.SynchronizeAsync();

        }

    }
