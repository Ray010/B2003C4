<!--一部海老沼が仮で作っていますｶﾘｶﾘ　129行-->

@page "/IriTome/Meet"



<!DOCTYPE HTML>
<html lang="ja">

<head>
    <meta charset="Shift-JIS" />
    <meta http-equiv="content-language" content="ja" />
    <meta name="google" content="notranslate" />

    <link rel="stylesheet" href="./css/bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="./css/app.css" />

    <style>
        @* bootstrapのスタイルを上書き *@ @* (ヘッダー下の空白を無くす) *@
        .mb-3 { margin-bottom: 0.5rem; }

        @* _Layoutの背景色等を上書き *@
        .BackGr {
            background: #80989b;
            width: 100%;
            height: 100%;
            margin: 0px;
            padding: 0px;
            overflow: hidden;
        }
        @*
        table {
            border: solid;

        }
        tr {
            border: solid;
        }
        td {
            border: solid;
            border-width: 2px;

        }
        *@

        .td_padding_Fixed{
            padding: 0%;
        }
        .td_Card_Fix {
            margin-right: calc(50% - 50vw);
            margin-left: calc(50% - 50vw);
        }

        .Scroll_Control{

            height: 13rem;
            overflow:auto

        }

        .Card_child {
            position: absolute;
            bottom: 13rem;

        }
        .Button_Child{
            position: absolute;
            top: 0%;
            right: 0%;

        }

        .px-4{
            padding-top
        }

        .section {
            margin-right: calc(50% - 50vw);
            margin-left: calc(50% - 50vw);
        }

        .Button_up_Fixed {
            height: 9.5rem;
            margin: 15% 0% 1.5%;
            font-size: 2.5rem;
        }
        .Button_Fixed {
            height: 9.5rem;
            margin: 1.5% 0% 1.5%;
            font-size: 2.5rem;
        }

        .Button_bottom_Fixed {
            height: 9.5rem;
            margin: 1.5% 0% 15%;
            font-size: 2.5rem;
        }



        .box {


            transition: all 300ms 0s ease;
        }

        .active {
            transform: translateX(101%);

        }


        .divX {
            width: 100px;
            height: 100px;
            background: red;
            transition: width 2s;
        }

            .divX:hover {
                width: 300px;
            }

            .overflow_Table{
                overflow: hidden
            }

    </style>


</head>

<body>
    <!--デモ用に海老沼が仮で作りましたｶﾘｶﾘ-->
    <div class="Card_parent">
        <div>
            <table class="Card_table_Fixed overflow_Table">
                <tr>
                    @if (PhaseNo == 0)
                    {
                    <td  class="box @Ani_F td_Card_Fix">
                        <table class="Card_table_Fixed">
                            <tr>
                                <td>
                                    <button @onclick="@(s => Phase(1))" class="btn  btn-primary btn-block Button_up_Fixed">会えた</button>
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    <button class="btn btn-danger btn-block Button_bottom_Fixed">会えなかった</button>
                                </td>
                            </tr>
                        </table>
                    </td>
                    }
                    else if (PhaseNo == 1)
                    {
                        

                        Ani_F = null;

                    <td class="box @Ani_F td_Card_Fix">
                        <table class="Card_table_Fixed">
                            <tr>
                                <td>
                                    <button @onclick="@(s => Phase(2))" class="btn btn-primary btn-block Button_up_Fixed">契約</button>
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    <button class="btn btn-warning btn-block Button_Fixed">保留</button>
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    <button class="btn btn-danger btn-block Button_bottom_Fixed">完止め</button>
                                </td>
                            </tr>
                        </table>
                    </td>
                        

                    }
                    else if (PhaseNo == 2)
                    {

                        <td class="box @Ani_F td_Card_Fix">
                            <table class="Card_table_Fixed">
                                <tr>
                                    <td>
                                        <button class="btn btn-primary btn-block Button_up_Fixed">縛り</button>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <button class="btn btn-success btn-block Button_Fixed">先起し</button>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <button class="btn btn-secondary btn-block Button_bottom_Fixed">その他</button>
                                    </td>
                                </tr>

                            </table>
                        </td>
                    }


                </tr>

            </table>

        </div>
    </div>
    <h6>
        <svg width="1em" height="1em" viewBox="0 0 16 16" class="Bug bi bi-bug" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" d="M4.355.522a.5.5 0 0 1 .623.333l.291.956A4.979 4.979 0 0 1 8 1c1.007 0 1.946.298 2.731.811l.29-.956a.5.5 0 1 1 .957.29l-.41 1.352A4.985 4.985 0 0 1 13 6h.5a.5.5 0 0 0 .5-.5V5a.5.5 0 0 1 1 0v.5A1.5 1.5 0 0 1 13.5 7H13v1h1.5a.5.5 0 0 1 0 1H13v1h.5a1.5 1.5 0 0 1 1.5 1.5v.5a.5.5 0 1 1-1 0v-.5a.5.5 0 0 0-.5-.5H13a5 5 0 0 1-10 0h-.5a.5.5 0 0 0-.5.5v.5a.5.5 0 1 1-1 0v-.5A1.5 1.5 0 0 1 2.5 10H3V9H1.5a.5.5 0 0 1 0-1H3V7h-.5A1.5 1.5 0 0 1 1 5.5V5a.5.5 0 0 1 1 0v.5a.5.5 0 0 0 .5.5H3c0-1.364.547-2.601 1.432-3.503l-.41-1.352a.5.5 0 0 1 .333-.623zM4 7v4a4 4 0 0 0 3.5 3.97V7H4zm4.5 0v7.97A4 4 0 0 0 12 11V7H8.5zM12 6H4a3.99 3.99 0 0 1 1.333-2.982A3.983 3.983 0 0 1 8 2c1.025 0 1.959.385 2.666 1.018A3.989 3.989 0 0 1 12 6z" />
        </svg>
    </h6>


    @*アニメーションの参考

        <div class="box @Ani_F"></div>


        <input @onclick="Ani" class="button" type="button" value="要素を動かす">


        <h1>The transition Property</h1>

        <p>Hover over the div element below, to see the transition effect:</p>
        <div class="divX"></div>

        <p><b>Note:</b> This example does not work in Internet Explorer 9 and earlier versions.</p>

    *@


</body>
</html>


@code {

    public int PhaseNo;


    public static string Ani_F ;

    public int i;

    public void Ani()
    {
        if (i == 1)
        {
            Ani_F = null;
            i = 0;
        }
        else if (i == 0)
        {
            Ani_F = "active";
            i=0;
        }

    }

    protected override async Task OnInitializedAsync()
    {


        await Task.Delay(0);
    }

    public void Phase(int phaseNo)
    {
        PhaseNo = phaseNo;

        if (i == 1)
        {
            Ani_F = null ;
            i = 0;
        }
        else if (i == 0)
        {
            Ani_F = "active";
            i = 1;
        }


    }

    //参考
    bool Rotate;
    bool Disabled;

    
    string CssClass()
    {
        var cssClass = new List<string>();
        if (this.Rotate) cssClass.Add("rotate");
        if (this.Disabled) cssClass.Add("disabled");
        return string.Join(' ', cssClass);
    }

}