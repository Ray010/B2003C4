<!--一部海老沼が仮で作っていますｶﾘｶﾘ　129行-->

@page "/Kansa/KansaSearchFragment"
@using Microsoft.AspNetCore.Components;
@using B2003C4.Pages.Kansa;
@using Microsoft.JSInterop;
@using MatBlazor;



<!DOCTYPE HTML>
<html lang="ja">

<head>
    <meta charset="Shift-JIS" />
    <meta http-equiv="content-language" content="ja" />
    <meta name="google" content="notranslate" />

    <link rel="stylesheet" href="./css/bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="./css/app.css" />

    <style>
        @* bootstrapのスタイルを上書き *@ @* (ヘッダー下の空白を無くす) *@
        .mb-3 { margin-bottom: 0.5rem; }

        @* _Layoutの背景色等を上書き *@
        .BackGr {
            background: #80989b;
            width: 100%;
            height: 100%;
            margin: 0px;
            padding: 0px;
            overflow: hidden;
        }

        .td_padding_Fixed{
            padding: 0%;
        }

        .Scroll_Control {
            width: 100%;
            overflow-y: scroll;
            overflow-x: hidden;

        }
        .Scroll_Control::-webkit-scrollbar {
            width: 0.3vw;
            height: 5px;

        }
            .Scroll_Control::-webkit-scrollbar-thumb {
            background: linear-gradient(0deg,#43e2c6,#3183d0);
            border-radius: 3px;
        }

        .Scroll_Height_40 {
            height: @Scroll_Size;
        }

        .Card_child {
            position: absolute;
            bottom: 13rem;
        }
        .Button_Child{
            position: absolute;
            top: 0%;
            right: 0%;

        }

        .px-4{
            padding-top: 0em 0em 0em 0em;
        }

        .section {
            margin-right: calc(50% - 50vw);
            margin-left: calc(50% - 50vw);
        }
        .Border_Bottom {
            border-bottom: outset;

        }
        .Border {
            border: 0.1rem solid;
            border-color: #FFFFFF;
        }
        .R-Border {
            border-right: 0.1rem solid;
            border-color: #FFFFFF;
        }
        .B-Border {
            border-bottom: 0.1rem solid;
            border-color: #FFFFFF;

        }
        .T-Border {
            border-top: 0.1rem solid;
            border-color: #FFFFFF;

        }
        .ColorB {
            border-bottom-color: #000000;
        }

        .Bg_Sub_Color {
            background-color: #039BE5;
        }

        .Button_Color {
            background-color: #FFFFFF;

        }
        .button_Fixed{
            border-radius: 0;
        }
        .button_Cube {
            border-radius: 100%;
        }
        .Text_Color{
            color: #FFFFFF;
        }
        .btn:hover{
            color: #FFFFFF;

        }
        footer {
            position: fixed;
            bottom: 0;
            width: 85%
        }
        .Button_Padding_Fixed {
            padding: 1rem;
            bottom:2%;
            right:2%;
            position:fixed;
        }

        .Button_Border_Fixed{
            border-bottom-width: 0px;
        }
        .Button_Block_Fixed{
            width: calc(100% + 0.3vw);
        }

        .Position_Fixed{
            position : fixed;
        }


        @*Info-Button改造*@

        .btn-info{
            color: #000000;
            background-color: #FFFFFF;
            border-color: #FFFFFF;
        }
        .btn-info:hover {
            color: #000000;
            background-color: #CFD8DC;
            border-color: #CFD8DC;
        }

        .btn-info:not(:disabled):not(.disabled):active, .btn-info:not(:disabled):not(.disabled).active,
        .show > .btn-info.dropdown-toggle {
            color: #FFFFFF;
            background-color: #90A4AE;
            border-color: #90A4AE;
        }


        card-body {
            padding: 0.5rem;
            margin-bottom: 0.25rem;
        }

        .card {
            display: block;
            border-radius: 0;
            box-shadow: 0px 0px 10px 2px rgba(0,0,0,0.3);
        }

        .card_Bottom_Margin{
            margin-bottom: 0.25rem;
            padding: 0rem;
        }
        .card_Shadow {
            filter: drop-shadow(4px 4px 6px rgba(0,0,0,.5));
        }

        .form-control{
            border: hidden;
            padding: 0rem;
            height:auto;
        }
        .btn-block{
            width: 100%;
        }
        .Card_Fixed {
            margin: 0.5rem 0rem 0.5rem 0rem;
            padding: 0.5rem 0rem 0.5rem 0rem
        }

        .Margin_R{
            padding-right:1rem;
            padding-left:0.2rem;
        }

        .btn-KansaButton {
            border-radius: 0;
            background-color: #ffffff;
        }

            .btn-KansaButton:not(:disabled):not(.disabled):active,
            .btn-KansaButton:not(:disabled):not(.disabled).active,
            .show > .btn-menu.dropdown-toggle {
            }

        .Padding_Mini {
            padding: 1%;
        }

        label {
            margin-bottom: 0;
        }
        p{
            height:0;
        }

        @*TextInput*@
        .mdc-text-field {
            border-top-left-radius: 0;
            border-top-right-radius:0;
        }

        .mdc-text-field--filled:not(.mdc-text-field--disabled) {
            background-color:#FFFFFF;
        }


        @*Select*@
        .mdc-select .mdc-select__anchor {
            border-top-left-radius: 0;
            border-top-right-radius: 0;
        }

        .mdc-select:not(.mdc-select--disabled) .mdc-select__anchor {
            background-color: #FFFFFF;
        }

        @*ChkBox*@
        .BackColor {
            background-color: #FFFFFF;
            padding-right: 5%;
        }

        .mdc-checkbox{
            @*padding:5px;*@
        }

    </style>




</head>
<body style="overflow:hidden" class="Bg_Color">

    <div class="mat-layout-grid" style="padding:0.1rem;">
        <div class="mat-layout-grid-inner">
            <div class="mat-layout-grid-cell @Layout_Button ">
                <MatButton Raised="true" OnClick="UpdateModelDataOrPhaseShift" Disabled="!Phase1Data.LoadingState" style="width: 100%;">検索</MatButton>
                <!--<MatButton Raised="true" OnClick="UpdateModelDataOrPhaseShift" style="width:100%;">検索</MatButton>-->
            </div>
            <div class="mat-layout-grid-cell @Layout_Button">
                <MatButton Raised="true" OnClick="Clear" Disabled="!Phase1Data.LoadingState" style="width:100%;">クリア</MatButton>
            </div>
        </div>
    </div>

    @code{
    }


    <div class="Scroll_Control Scroll_Height_40 Padding_Mini">

        <div class="mat-layout-grid" style="padding:0rem;">
            <div class="mat-layout-grid-inner">
                <div class="mat-layout-grid-cell @Layout_Long">
                    <MatTextField @bind-Value="Phase1Data.S_DokuCode" Label="読者No" TValue="int?" Disabled="!Phase1Data.LoadingState" style="width:100%;" class="mat-elevation-z3"></MatTextField>

                </div>



                <!--区域-->
                <div class="mat-layout-grid-cell @Layout_Small">
                    <MatTextField @bind-Value="Phase1Data.S_KuikiNo" Label="区域" Disabled="!Phase1Data.LoadingState" class="mat-elevation-z3"></MatTextField>
                </div>
                <div class="mat-layout-grid-cell @Layout_Middle_M">
                    <MatSelect HelperText="" Label="区域" @bind-Value="Phase1Data.S_KuikiNo" Disabled="!Phase1Data.LoadingState" class="mat-elevation-z3" style="width:100%;">
                        @foreach (var Kuiki in C_KuikiList)
                        {
                            <MatOption Value="@Kuiki.Kuiki" TValue="int?">@Kuiki.Name</MatOption>
                        }
                    </MatSelect>
                </div>





                <!--順路-->

                @if (Phase1Data.S_KuikiNo == null)
                {
                    TextInputActive = true;
                }
                else if (Phase1Data.S_KuikiNo != null && Phase1Data.LoadingState == true)
                {
                    TextInputActive = false;
                }

                <div class="mat-layout-grid-cell @Layout_Middle_S">
                    <MatTextField @bind-Value="Phase1Data.S_Junro" Label="順路" TValue="int?" Disabled="TextInputActive" class="mat-elevation-z3"></MatTextField>
                </div>

                <!--枝番号-->
                <div class="mat-layout-grid-cell @Layout_Middle_S">
                    <MatTextField @bind-Value="Phase1Data.S_Junro_Sub" Label="枝番号" TValue="int?" Disabled="TextInputActive" class="mat-elevation-z3"></MatTextField>
                </div>

                <!--読者名-->
                <div class="mat-layout-grid-cell @Layout_Long">
                    <MatTextField @bind-Value="Phase1Data.S_DokuName" Label="読者名" Disabled="!Phase1Data.LoadingState" style="width:100%;" class="mat-elevation-z3"></MatTextField>
                </div>

                <!--読者名（ｶﾅ）-->
                <div class="mat-layout-grid-cell @Layout_Long">
                    <MatTextField @bind-Value="Phase1Data.S_DokuKana" Label="読者名(ｶﾅ)" Disabled="!Phase1Data.LoadingState" style="width:100%;" class="mat-elevation-z3"></MatTextField>
                </div>

                <!--市外局番-->
                <div class="mat-layout-grid-cell @Layout_Small">
                    <MatTextField @bind-Value="Phase1Data.S_Sigai" Label="局番" Disabled="!Phase1Data.LoadingState" class="mat-elevation-z3"></MatTextField>
                </div>

                <!--市外局番以降-->
                <div class="mat-layout-grid-cell @Layout_Middle_M">
                    <MatTextField @bind-Value="Phase1Data.S_Tel" Label="電話番号" Disabled="!Phase1Data.LoadingState" style="width:100%;" class="mat-elevation-z3"></MatTextField>
                </div>

                <!--町名番号-->
                <div class="mat-layout-grid-cell @Layout_Small">
                    <MatTextField @bind-Value="Phase1Data.S_ChomeiCode" TValue="int?" Label="町No." Disabled="!Phase1Data.LoadingState" class="mat-elevation-z3"></MatTextField>
                </div>

                <!--町名-->
                <div class="mat-layout-grid-cell @Layout_Middle_M">
                    <MatSelect HelperText="" Label="町名" @bind-Value="Phase1Data.S_ChomeiCode" TValue="int?" Disabled="!Phase1Data.LoadingState" class="mat-elevation-z3" style="width:100%;">

                        @foreach (var City in ChomeiList)
                        {
                            <MatOption Value="@City.ChomeiCode" TValue="int?">@City.ChomeiName</MatOption>
                        }

                    </MatSelect>
                </div>

                <!--番地-->
                <div class="mat-layout-grid-cell @Layout_Middle_S">
                    <MatTextField @bind-Value="Phase1Data.S_Banti" Label="番" TValue="int?" Disabled="!Phase1Data.LoadingState" class="mat-elevation-z3"></MatTextField>
                </div>

                <!--号-->
                <div class="mat-layout-grid-cell @Layout_Middle_S">
                    <MatTextField @bind-Value="Phase1Data.S_Gou" Label="号" TValue="int?" Disabled="!Phase1Data.LoadingState" class="mat-elevation-z3"></MatTextField>
                </div>

                <!--建物名（ｶﾅ）-->
                <div class="mat-layout-grid-cell @Layout_Long">
                    <MatTextField @bind-Value="Phase1Data.S_BuildKana" Label="建物名(ｶﾅ)" Disabled="!Phase1Data.LoadingState" style="width:100%;" class="mat-elevation-z3"></MatTextField>
                </div>

                <!--建物名-->
                <div class="mat-layout-grid-cell @Layout_Long">
                    <MatTextField @bind-Value="Phase1Data.S_BuildName" Label="建物名" Disabled="!Phase1Data.LoadingState" style="width:100%;" class="mat-elevation-z3"></MatTextField>
                </div>

                <!--室番号-->
                <div class="mat-layout-grid-cell @Layout_Middle_S">
                    <MatTextField @bind-Value="Phase1Data.S_RoomNo" Label="室番" TValue="int?" Disabled="!Phase1Data.LoadingState" class="mat-elevation-z3"></MatTextField>
                </div>

                <!--区分-->
                <div class="mat-layout-grid-cell @Layout_Long BackColor mat-elevation-z3">
                    <div class="mat-layout-grid-inner">
                        @foreach (var ChkBox in KubunList)
                        {
                            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-1">
                                <MatCheckbox @bind-Value="@ChkBox.Active" Label="@ChkBox.KubunName" Disabled="!Phase1Data.LoadingState"></MatCheckbox>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Phase1Data.LoadingState

    <div class="mat-layout-grid" style="padding:0.1rem;">
        <div class="mat-layout-grid-inner">
            <div class="mat-layout-grid-cell @Layout_Button ">
                <MatButton Raised="true" OnClick="UpdateModelDataOrPhaseShift" Disabled="!Phase1Data.LoadingState" style="width:100%;">検索</MatButton>
            </div>
            <div class="mat-layout-grid-cell @Layout_Button">
                <MatButton Raised="true" OnClick="Clear" Disabled="!Phase1Data.LoadingState" style="width:100%;">クリア</MatButton>
            </div>
        </div>
    </div>
</body>
</html>



@code{


}